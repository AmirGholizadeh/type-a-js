!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e){function t(n){if(i[n])return i[n].exports;var o=i[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var i={};t.m=e,t.c=i,t.d=function(e,n,i){!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,i){if(1&i&&(e=t(e)),8&i)return e;if(4&i&&"object"===n(e)&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&i&&"string"!=typeof e)for(var r in e)t.d(o,r,function(t){return e[t]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s="./src/ts/TypeJS.ts")}({"./src/ts/TypeJS.ts":
/*!**************************!*\
    !*** ./src/ts/TypeJS.ts ***!
    \**************************/
/*! no static exports found */
function(e,t,n){"use strict";t.__esModule=!0;var i=n(
/*! ./classes/UIController */
"./src/ts/classes/UIController.ts"),o=n(
/*! ./functions/random */
"./src/ts/functions/random.ts"),r=function(){function e(e,t){this.startPermission=!0,this.addPermissionF=!1,this.deletePermission=!1,this.addPermissionIn=!1,this.config=t,this.parentId=e,this.addTextArr=this.config.add&&this.config.add.text.split(""),this.config.init.delay=this.config.init.delay?this.config.init.delay:1,this.config.init.delayBetween=this.config.init.delayBetween?this.config.init.delayBetween:50,this.config.cursorSpeed=this.config.cursorSpeed?this.config.cursorSpeed:50,this.config.clearDelay=this.config.clearDelay?this.config.clearDelay:1,this.config.delete&&(this.config.delete.delay=this.config.delete.delay?this.config.delete.delay:this.config.init.delay,this.config.delete.delayBetween=this.config.delete.delayBetween?this.config.delete.delayBetween:this.config.init.delayBetween),this.config.add&&(this.config.add.delay=this.config.add.delay?this.config.add.delay:this.config.init.delay,this.config.add.delayBetween=this.config.add.delayBetween?this.config.add.delayBetween:this.config.init.delayBetween),this.uiConfig={parentId:this.parentId,cursorId:""+o.default(0,9999999999999),containerId:""+o.default(0,9999999999999),textContainerId:""+o.default(0,9999999999999)},this.ui=new i.default(this.uiConfig)}return e.prototype.init=function(){this.typeIt()},e.prototype.handle=function(){var e=this;this.ui.createContainer(),this.ui.createCursor(this.config.cursorSpeed),this.initTextArr=this.config.init.text.split(""),window.setTimeout((function(){e.ui.createContainer(),e.ui.createCursor(e.config.cursorSpeed),e.initTextArr.forEach((function(t,n){window.setTimeout((function(){e.ui.addText(t),n===e.config.init.text.length-1&&(e.config.delete?window.setTimeout((function(){for(var t=function(t){window.setTimeout((function(){e.ui.deleteText(),t===e.config.delete.count-1&&e.config.add&&(e.addPermissionF=!0)}),t*e.config.delete.delayBetween)},n=0;n<e.config.delete.count;n++)t(n)}),e.config.delete.delay):e.config.add&&(e.addPermissionF=!0),e.config.add&&window.setInterval((function(){e.addPermissionF&&(e.addPermissionF=!1,window.setTimeout((function(){e.addTextArr.forEach((function(t,n){window.setTimeout((function(){e.ui.addText(t)}),n*e.config.add.delayBetween)}))}),e.config.add.delay))}),0))}),n*e.config.init.delayBetween)}))}),this.config.init.delay)},e.prototype.handleInfinite=function(){var e=this;window.setInterval((function(){e.startPermission&&(e.initTextArr=e.config.init.text.split(""),e.startPermission=!1,e.ui.createContainer(),e.ui.createCursor(e.config.cursorSpeed),window.setTimeout((function(){e.initTextArr.forEach((function(t,n){window.setTimeout((function(){if(e.ui.addText(t),e.initTextArr.length-1===n){e.config.delete?window.setTimeout((function(){for(var t=function(t){window.setTimeout((function(){if(e.ui.deleteText(),t===e.config.delete.count-1&&e.config.add){if(!e.config.infinite.deleteInfinite){var n=e.config.init.text.split("");n.splice(n.length-e.config.delete.count,n.length),e.config.init.text=n.toString().replace(/,/g,""),e.initTextArr=e.config.init.text.split(""),e.config.delete=null}e.addPermissionIn=!0}}),e.config.delete.delayBetween*t)},n=0;n<e.config.delete.count;n++)t(n)}),e.config.delete.delay):e.config.add?(e.deletePermission=!1,e.addPermissionIn=!0):e.deletePermission=!0,e.config.add?window.setInterval((function(){!0===e.addPermissionIn&&(e.addPermissionIn=!1,window.setTimeout((function(){e.addTextArr.forEach((function(t,n){window.setTimeout((function(){e.ui.addText(t),e.addTextArr.length-1===n&&(!e.config.infinite.addInfinite&&(e.config.init.text=""+e.config.init.text+e.config.add.text,e.initTextArr=e.config.init.text.split(""),e.config.add=null),e.deletePermission=!0)}),n*e.config.add.delayBetween)}))}),e.config.add.delay))}),0):e.deletePermission=!0;var i=window.setInterval((function(){e.deletePermission&&(e.deletePermission=!1,window.setTimeout((function(){e.ui.clear(),e.startPermission=!0,window.clearInterval(i)}),e.config.clearDelay))}),0)}}),n*e.config.init.delayBetween)}))}),e.config.init.delay))}),0)},e.prototype.typeIt=function(){this.config.infinite?this.handleInfinite():this.handle()},e}();t.default=r},"./src/ts/classes/UIController.ts":
/*!****************************************!*\
    !*** ./src/ts/classes/UIController.ts ***!
    \****************************************/
/*! no static exports found */
function(e,t,n){"use strict";t.__esModule=!0;var i=function(){function e(e){this.config=e}return e.prototype.createCursor=function(e){var t=document.createElement("span");t.id=this.config.cursorId,t.textContent="|",t.setAttribute("style","animation:cursorAnimation "+e/100+"s infinite;"),document.getElementById(this.config.cursorId)&&document.getElementById(this.config.cursorId).remove(),document.getElementById(this.config.containerId).appendChild(t)},e.prototype.createTextContainer=function(){var e=document.createElement("span");e.id=this.config.textContainerId,document.getElementById(this.config.containerId).appendChild(e)},e.prototype.addText=function(e){var t=document.getElementById(this.config.textContainerId);t.textContent=""+t.textContent+e},e.prototype.deleteText=function(){document.getElementById(this.config.textContainerId).textContent=document.getElementById(this.config.textContainerId).textContent.slice(0,document.getElementById(this.config.textContainerId).textContent.length-1)},e.prototype.clear=function(){document.getElementById(this.config.cursorId)&&document.getElementById(this.config.cursorId).remove(),document.getElementById(this.config.textContainerId)&&document.getElementById(this.config.textContainerId).remove()},e.prototype.createContainer=function(){var e=document.createElement("div");e.id=this.config.containerId,"#"===this.config.parentId.charAt(0)?document.getElementById(this.config.parentId.slice(1,this.config.parentId.length)).appendChild(e):document.querySelector(this.config.parentId).appendChild(e),this.createTextContainer()},e}();t.default=i},"./src/ts/functions/random.ts":
/*!************************************!*\
    !*** ./src/ts/functions/random.ts ***!
    \************************************/
/*! no static exports found */
function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){return Math.floor(Math.random()*t)+e}}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,